--
/* Star Transformation */
--
/* We will perform the following practices */
/*
• Examine the impact of using star transformation on improving star schema query performance
• Analyze the 10053 trace file that gets generated by a star transformation
• Use STAR_TRANSFORMATION hint to instruct the optimizer to use star transformation
*/
--
/* Examining Optimizer behavior without Star Transformation */
--
/* Make sure all the foreign key columns in the practice query example are indexed */
--
set autot off
col COLUMN_NAME format a15
col INDEX_NAME format a20
col I_TYPE format a7
col COLUMN_POSITION format 9
SELECT
    C.INDEX_NAME,
    I.INDEX_TYPE I_TYPE,
    COLUMN_NAME,
    COLUMN_POSITION
FROM
    USER_IND_COLUMNS C,
    USER_INDEXES     I
WHERE
    C.INDEX_NAME = I.INDEX_NAME
    AND C.TABLE_NAME='ORDERS'
    AND C.COLUMN_NAME IN ('SALES_REP_ID', 'CUSTOMER_ID')
ORDER BY
    C.INDEX_NAME,
    C.COLUMN_POSITION;
--
/*
INDEX_NAME           I_TYPE  COLUMN_NAME     COLUMN_POSITION
-------------------- ------- --------------- ---------------
ORD_CUSTOMER_IX      NORMAL  CUSTOMER_ID                   1
ORD_SALES_REP_IX     NORMAL  SALES_REP_ID                  1
*/
--
/* Run the Star Transformation query */
--
set linesize 180
set autotrace trace exp stat
@my_query.sql
set autot off    
/*
----------------------------------------------------------------------------------
| Id  | Operation            | Name      | Rows  | Bytes | Cost (%CPU)| Time     |
----------------------------------------------------------------------------------
|   0 | SELECT STATEMENT     |           |   299 | 20631 |  5058   (1)| 00:00:01 |
|   1 |  HASH GROUP BY       |           |   299 | 20631 |  5058   (1)| 00:00:01 |
|*  2 |   HASH JOIN          |           |   299 | 20631 |  5057   (1)| 00:00:01 |
|*  3 |    TABLE ACCESS FULL | CUSTOMERS |  2054 | 63674 |   214   (1)| 00:00:01 |
|*  4 |    HASH JOIN         |           |  2911 |   108K|  4843   (1)| 00:00:01 |
|*  5 |     TABLE ACCESS FULL| EMP       |     4 |   100 |     5   (0)| 00:00:01 |
|*  6 |     TABLE ACCESS FULL| ORDERS    |   470K|  5969K|  4837   (1)| 00:00:01 |
----------------------------------------------------------------------------------
*/
--
/* Examining Optimizer behavior with Star Transformation */
--
/* Set START_TRANSFORMATION enabled at session level if it's set to FALSE */
--
set autot off
SHOW PARAMETER STAR_TRANSFORMATION_ENABLED
ALTER SESSION SET STAR_TRANSFORMATION_ENABLED=TRUE;
--
/* Drop the B-Tree Indexes and Create Bitmap Indexes */
--
DROP INDEX ORD_SALES_REP_IX;
--
DROP INDEX ORD_CUSTOMER_IX;
--
CREATE BITMAP INDEX ORDERS_SALESR_BIX ON ORDERS(
    SALES_REP_ID
);
--
CREATE BITMAP INDEX ORDERS_CUST_BIX ON ORDERS(
    CUSTOMER_ID
);
--
/* Check if all referenced columns in the fact table (ORDERS) have foreign key constraints to dimension table */
--
col FK_COL FORMAT A15
col PK_TABLE FORMAT A15
SELECT
    A.COLUMN_NAME   FK_COL,
    C_PK.TABLE_NAME PK_TABLE
FROM
    USER_CONS_COLUMNS A
    JOIN USER_CONSTRAINTS C
    ON A.OWNER = C.OWNER
    AND A.CONSTRAINT_NAME = C.CONSTRAINT_NAME JOIN USER_CONSTRAINTS C_PK
    ON C.R_OWNER = C_PK.OWNER
    AND C.R_CONSTRAINT_NAME = C_PK.CONSTRAINT_NAME
WHERE
    C.CONSTRAINT_TYPE = 'R'
    AND A.TABLE_NAME = 'ORDERS';
--
/* Only Customer dimension table has foreign key in the ORDERS fact table */
--
FK_COL          PK_TABLE
--------------- ---------------
CUSTOMER_ID     CUSTOMERS
--
/* Create a foreign key constraint on ORDERS.SALES_REP_ID that references EMP.EMP_NO */
--
ALTER TABLE ORDERS ADD CONSTRAINT ORDERS_FK_EMP FOREIGN KEY (SALES_REP_ID) REFERENCES EMP(EMP_NO);
--
/* Gather Statistics */
--
exec DBMS_STATS.GATHER_TABLE_STATS(user,'ORDERS', METHOD_OPT => 'FOR ALL COLUMNS SIZE SKEWONLY');
exec DBMS_STATS.GATHER_TABLE_STATS(user,'CUSTOMERS', METHOD_OPT => 'FOR ALL COLUMNS SIZE SKEWONLY');
exec DBMS_STATS.GATHER_TABLE_STATS(user,'EMP', METHOD_OPT => 'FOR ALL COLUMNS SIZE SKEWONLY');
--
/* Run the Star Transformation query */
ALTER SYSTEM FLUSH SHARED_POOL;
set autotrace trace exp stat
@my_query.sql
set autot off
--
/*
---------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                    | Name                       | Rows  | Bytes | Cost (%CPU)| Time     |
---------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                             |                            |   277 | 10526 |  2168   (1)| 00:00:01 |
|   1 |  TEMP TABLE TRANSFORMATION                   |                            |       |       |            |          |
|   2 |   LOAD AS SELECT (CURSOR DURATION MEMORY)    | SYS_TEMP_0FD9D6613_133134F |       |       |            |          |
|   3 |    TABLE ACCESS BY INDEX ROWID BATCHED       | CUSTOMERS                  |  2054 | 63674 |  2066   (1)| 00:00:01 |
|*  4 |     INDEX RANGE SCAN                         | CUST_EMAIL_CLASS_IX        |  2054 |       |    15   (0)| 00:00:01 |
|   5 |   HASH GROUP BY                              |                            |   277 | 10526 |   102   (1)| 00:00:01 |
|*  6 |    HASH JOIN                                 |                            |   277 | 10526 |   101   (0)| 00:00:01 |
|   7 |     VIEW                                     | VW_ST_8DFE8582             |   277 |  4986 |    97   (0)| 00:00:01 |
|   8 |      NESTED LOOPS                            |                            |   277 | 11634 |    86   (0)| 00:00:01 |
|   9 |       BITMAP CONVERSION TO ROWIDS            |                            |   276 |  5535 |    65   (0)| 00:00:01 |
|  10 |        BITMAP AND                            |                            |       |       |            |          |
|  11 |         BITMAP MERGE                         |                            |       |       |            |          |
|  12 |          BITMAP KEY ITERATION                |                            |       |       |            |          |
|* 13 |           TABLE ACCESS BY INDEX ROWID BATCHED| EMP                        |     4 |   100 |     7   (0)| 00:00:01 |
|* 14 |            INDEX RANGE SCAN                  | EMP_ENAME_IX               |     5 |       |     2   (0)| 00:00:01 |
|* 15 |           BITMAP INDEX RANGE SCAN            | ORDERS_SALESR_BIX          |       |       |            |          |
|  16 |         BITMAP MERGE                         |                            |       |       |            |          |
|  17 |          BITMAP KEY ITERATION                |                            |       |       |            |          |
|  18 |           TABLE ACCESS FULL                  | SYS_TEMP_0FD9D6613_133134F |  2054 | 10270 |     4   (0)| 00:00:01 |
|* 19 |           BITMAP INDEX RANGE SCAN            | ORDERS_CUST_BIX            |       |       |            |          |
|  20 |       TABLE ACCESS BY USER ROWID             | ORDERS                     |     1 |    22 |    32   (0)| 00:00:01 |
|  21 |     TABLE ACCESS FULL                        | SYS_TEMP_0FD9D6613_133134F |  2054 | 41080 |     4   (0)| 00:00:01 |
---------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   4 - access("C"."CUSTOMER_CLASS"='Regular')
   6 - access("ITEM_1"="C0")
  13 - filter("E"."JOB_CODE"='SL02')
  14 - access("E"."ENAME" LIKE 'DT%')
       filter("E"."ENAME" LIKE 'DT%')
  15 - access("O"."SALES_REP_ID"="E"."EMP_NO")
  19 - access("O"."CUSTOMER_ID"="C0")

Hint Report (identified by operation id / Query Block Name / Object Alias):
Total hints for statement: 1 (U - Unused (1))
---------------------------------------------------------------------------

   0 -  STATEMENT
         U -  NO_PARALLEL

Note
-----
   - Degree of Parallelism is 1 because of hint
   - star transformation used for this statement
*/
--
/* Analyzing 10053 Trace Files */
/* We will will look deeper into the 10053 trace file of the star transformation query example */
--
/* Execute the following commands to generate 10053 trace file */
--
--
SHOW PARAMETER STAR_TRANSFORMATION_ENABLED
ALTER SESSION SET STAR_TRANSFORMATION_ENABLED=TRUE;
--
ALTER SYSTEM FLUSH SHARED_POOL;
ALTER SESSION SET TRACEFILE_IDENTIFIER='MY_SESSION';
ALTER SYSTEM SET EVENTS = '10053 trace name context forever, level 2';
@my_query.sql
ALTER SYSTEM SET EVENTS = '10053 trace name context off';
--
/* Retrieve the trace file name */
--
SELECT
    P.TRACEFILE
FROM
    V$SESSION S
    JOIN V$PROCESS P
    ON S.PADDR = P.ADDR
WHERE
    S.AUDSID = SYS_CONTEXT('USERENV', 'SESSIONID');
--
/*
TRACEFILE
--------------------------------------------------------------------------------
/u01/app/oracle/diag/rdbms/cdb01/cdb01/trace/cdb01_ora_19500_MY_SESSION.trc
*/
--
/* In this file search for STAR */
/* In the below trace: SEL$1 is the block name of the query. "O"@"SEL$1" is considered as the fact 
/* table by the optimizer table. "E"@"SEL$1" is considered as dimension table as it comes under 
/* the keyword SUBQUERIES. "C"@"SEL$1" means the customer table which is also considered as dimension 
/* table but will be created as a temporary table */
 STAR_TRANSFORMATION(@"SEL$1" "O"@"SEL$1" SUBQUERIES(("E"@"SEL$1") TEMP_TABLE("C"@"SEL$1")))
 /*
 Go to the end of the file by pressing G: You'll see three lines ending with the work FINAL
 These are the final transformations the Optimizer decided to use. There are one Fact table and 2 dimension
 table transformations.
 --
  SEL$E1F9C76C 0x9d4e70e0 (STAR TRANSFORM TEMP TABLE SEL$1) [FINAL]
  SEL$2D25922E 0x9d7a13e8 (STAR TRANSFORM SUBQUERY SEL$1) [FINAL]
  SEL$128B24BF 0x9d44d890 (STAR TRANSFORM SUBQUERY SEL$1) [FINAL]
--
First Transformation: SEL$E1F9C76C 0x9d4e70e0 (STAR TRANSFORM TEMP TABLE SEL$1) [FINAL]
--
--SELECT "C"."CUSTOMER_ID" "ITEM_1","C"."CUST_FIRST_NAME" "ITEM_2","C"."CUST_LAST_NAME" "ITEM_3" FROM "SOE"."CUSTOMERS" "C" WHERE "C"."CUSTOMER_CLASS"='Regular'
--Copy query block qb# -1 (<unnamed>) : SELECT /*+ CACHE_TEMP_TABLE(T1) */  
--"C0" FROM "SYS"."SYS_TEMP_0FD9D661A_1372C91" T1
--Registered qb: SEL$E1F9C76C 0x9d4f4a38 (STAR TRANSFORM TEMP TABLE SEL$1)  
/*
create a new query file with this condition:
AND ORDER_DATE BETWEEN TO_DATE ('01-01-2007', 'DD-MM-YYYY') AND TO_DATE ('31-12-
2007', 'DD-MM-YYYY')
*/
ALTER SESSION SET STAR_TRANSFORMATION_ENABLED=TRUE;
ALTER SYSTEM FLUSH SHARED_POOL;
SET AUTOTRACE TRACE EXP STAT
@my_query.sql
--
/*
--------------------------------------------------------------------------------------------------------------
| Id  | Operation                                | Name              | Rows  | Bytes | Cost (%CPU)| Time     |
--------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                         |                   |     1 |    80 |  1627   (1)| 00:00:01 |
|   1 |  HASH GROUP BY                           |                   |     1 |    80 |  1627   (1)| 00:00:01 |
|*  2 |   FILTER                                 |                   |       |       |            |          |
|   3 |    NESTED LOOPS                          |                   |     1 |    80 |  1626   (0)| 00:00:01 |
|   4 |     NESTED LOOPS                         |                   |     1 |    80 |  1626   (0)| 00:00:01 |
|   5 |      NESTED LOOPS                        |                   |     1 |    49 |  1625   (0)| 00:00:01 |
|*  6 |       TABLE ACCESS FULL                  | EMP               |     4 |   100 |     5   (0)| 00:00:01 |
|*  7 |       TABLE ACCESS BY INDEX ROWID BATCHED| ORDERS            |     1 |    24 |  1625   (0)| 00:00:01 |
|   8 |        BITMAP CONVERSION TO ROWIDS       |                   |       |       |            |          |
|*  9 |         BITMAP INDEX SINGLE VALUE        | ORDERS_SALESR_BIX |       |       |            |          |
|* 10 |      INDEX UNIQUE SCAN                   | CUSTOMERS_PK      |     1 |       |     0   (0)| 00:00:01 |
|* 11 |     TABLE ACCESS BY INDEX ROWID          | CUSTOMERS         |     1 |    31 |     1   (0)| 00:00:01 |
--------------------------------------------------------------------------------------------------------------
*/
--
ALTER SYSTEM FLUSH SHARED_POOL;
SET AUTOTRACE TRACE EXP STAT
@my_query.sql
--
/*
---------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                    | Name                       | Rows  | Bytes | Cost (%CPU)| Time     |
---------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                             |                            |     1 |    44 |  2168   (1)| 00:00:01 |
|   1 |  TEMP TABLE TRANSFORMATION                   |                            |       |       |            |          |
|   2 |   LOAD AS SELECT (CURSOR DURATION MEMORY)    | SYS_TEMP_0FD9D664E_13B6450 |       |       |            |          |
|   3 |    TABLE ACCESS BY INDEX ROWID BATCHED       | CUSTOMERS                  |  2054 | 63674 |  2066   (1)| 00:00:01 |
|*  4 |     INDEX RANGE SCAN                         | CUST_EMAIL_CLASS_IX        |  2054 |       |    15   (0)| 00:00:01 |
|   5 |   HASH GROUP BY                              |                            |     1 |    44 |   102   (1)| 00:00:01 |
|*  6 |    FILTER                                    |                            |       |       |            |          |
|*  7 |     HASH JOIN                                |                            |     1 |    44 |    90   (0)| 00:00:01 |
|*  8 |      TABLE ACCESS BY INDEX ROWID BATCHED     | ORDERS                     |       |       |    86   (0)| 00:00:01 |
|   9 |       BITMAP CONVERSION TO ROWIDS            |                            |       |       |            |          |
|  10 |        BITMAP AND                            |                            |       |       |            |          |
|  11 |         BITMAP MERGE                         |                            |       |       |            |          |
|  12 |          BITMAP KEY ITERATION                |                            |       |       |            |          |
|* 13 |           TABLE ACCESS BY INDEX ROWID BATCHED| EMP                        |     4 |   100 |     7   (0)| 00:00:01 |
|* 14 |            INDEX RANGE SCAN                  | EMP_ENAME_IX               |     5 |       |     2   (0)| 00:00:01 |
|* 15 |           BITMAP INDEX RANGE SCAN            | ORDERS_SALESR_BIX          |       |       |            |          |
|  16 |         BITMAP MERGE                         |                            |       |       |            |          |
|  17 |          BITMAP KEY ITERATION                |                            |       |       |            |          |
|  18 |           TABLE ACCESS FULL                  | SYS_TEMP_0FD9D664E_13B6450 |  2054 | 10270 |     4   (0)| 00:00:01 |
|* 19 |           BITMAP INDEX RANGE SCAN            | ORDERS_CUST_BIX            |       |       |            |          |
|  20 |      TABLE ACCESS FULL                       | SYS_TEMP_0FD9D664E_13B6450 |  2054 | 41080 |     4   (0)| 00:00:01 |
---------------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   4 - access("C"."CUSTOMER_CLASS"='Regular')
   6 - filter(TO_DATE(' 2007-12-31 00:00:00', 'syyyy-mm-dd hh24:mi:ss')>=TO_DATE(' 2007-01-01 00:00:00',
              'syyyy-mm-dd hh24:mi:ss'))
   7 - access("O"."CUSTOMER_ID"="C0")
   8 - filter("ORDER_DATE"<=TO_DATE(' 2007-12-31 00:00:00', 'syyyy-mm-dd hh24:mi:ss') AND "ORDER_DATE">=TO_DATE('
              2007-01-01 00:00:00', 'syyyy-mm-dd hh24:mi:ss'))
  13 - filter("E"."JOB_CODE"='SL02')
  14 - access("E"."ENAME" LIKE 'DT%')
       filter("E"."ENAME" LIKE 'DT%')
  15 - access("O"."SALES_REP_ID"="E"."EMP_NO")
  19 - access("O"."CUSTOMER_ID"="C0")

Hint Report (identified by operation id / Query Block Name / Object Alias):
Total hints for statement: 1 (U - Unused (1))
---------------------------------------------------------------------------

   0 -  STATEMENT
         U -  NO_PARALLEL

Note
-----
   - Degree of Parallelism is 1 because of hint
   - star transformation used for this statement
*/   
--
/* Clean up */
DROP INDEX ORDERS_SALESR_BIX;
DROP INDEX ORDERS_CUST_BIX;
CREATE INDEX ORD_SALES_REP_IX ON ORDERS(SALES_REP_ID);
CREATE INDEX ORD_CUSTOMER_IX ON ORDERS(CUSTOMER_ID);
ALTER TABLE ORDERS DROP CONSTRAINT ORDERS_FK_EMP;
ALTER SESSION SET STAR_TRANSFORMATION_ENABLED=false;